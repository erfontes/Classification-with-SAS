/**************************************************************************************************


THIS MACRO CALCULATES THE KS CURVE BASED ON BASIS POINTS AND ALSO GIVES THE REPORT TABLE WITH
SOME KEY INDICATORS:


	TOTAL TRANSACTIONS (1)
	TOTAL FRAUD TRANSACTIONS (2)
	FRAUD RATE (2/1)
	AMOUNT TOTAL (3)
	FRAUD AMOUNT TOTAL (4)
	FRAUD RATE $USD (4/3)
	AVERAGE AMOUNT
	AVERAGE FRAUD AMOUNT


THE KS CURVE HAS THE FOLLOWING VARIABLES:


	BP
	TOTAL TRANSACTIONS
	FRAUD TRANSACTIONS
	% FRAUD REFERRED
	TOTAL AMOUNT
	FRAUD AMOUNT
	ACTUAL MEAN
	PROBF MEAN
	FTG #
	FTG $USD
	CUM $ FRAUD REFERRED


VAR1 = SOURCE DATASET
VAR2 = PROBABILITY VARIABLE TO EVALUATE
VAR3 = MAXIMUM NUMBER RANGE OF BASIS POINT
VAR4 = NUMBER OF BASIS POINTS GROUPED
VAR5 = WEIGHT


**************************************************************************************************/


%MACRO KS_REPORT(VAR1=,VAR2=,VAR3=,VAR4=, VAR5=);


DATA &VAR1;
	SET &VAR1;
	TRXS_WGT=1;
	AMT_WGT=AMOUNT;
	IF WFISIND=1 THEN TRXS_WGT=1; ELSE
		TRXS_WGT=&VAR5;
	IF WFISIND=1 THEN AMT_WGT=AMOUNT; ELSE
		AMT_WGT=&VAR5*AMOUNT;
RUN;




PROC SQL;
CREATE TABLE TMP_SUM AS
SELECT	LACCT15,
	SUM(TRXS_WGT) AS TOT_TRXS,
	SUM(AMT_WGT) AS TOT_AMT,
	SUM(CASE WHEN WFISIND=1 THEN AMOUNT ELSE 0 END) AS TOT_AMT_FRD,
	SUM(CASE WHEN WFISIND=1 THEN 1 ELSE 0 END) AS TOT_TRXS_FRD
FROM	&VAR1
;
QUIT;


PROC SORT DATA=TMP_SUM NODUPKEY;
	BY LACCT15;
RUN;


PROC SORT DATA=&VAR1;
	BY LACCT15;
RUN;


DATA TEMP_KS_REPORT_DATA;
	MERGE &VAR1 (IN=KK) TMP_SUM;
	IF KK=1;
	BY LACCT15;
RUN;


PROC SORT DATA=TEMP_KS_REPORT_DATA;
	BY DESCENDING &VAR2;
RUN;


DATA TEMP_KS_REPORT_DATA;
	SET TEMP_KS_REPORT_DATA;
	
	RETAIN CUM_TRXS_FRD CUM_AMT_FRD CUM_TRXS CUM_AMT;


	CUM_TRXS_FRD + WFISIND;
	CUM_TRXS + &VAR5;


	CUM_AMT_FRD + WFISIND*AMT_WGT;
	CUM_AMT + AMT_WGT;




RUN;


DATA TEMP_KS_REPORT_DATA;
	SET TEMP_KS_REPORT_DATA;
	BP=INT((CUM_TRXS/TOT_TRXS)*10000);
	IF BP=0 THEN BP=1;
RUN;
/*
PROC PRINT DATA=TEMP_KS_REPORT_DATA (OBS=10);
	TITLE 'STEP STUCK';
RUN;
*/
DATA TEMP_KS_REPORT_DATA;
	SET TEMP_KS_REPORT_DATA;
	SEG_BP=BP;
	AUX=&VAR4;
	DO WHILE (MOD(SEG_BP,AUX) NE 0);
		SEG_BP=SEG_BP+1;
	END;
	IF SEG_BP GT &VAR3 THEN SEG_BP=&VAR3+1;
RUN;


DATA TEMP_KS_REPORT_DATA;
	SET TEMP_KS_REPORT_DATA;


	PERC_CUM_TRXS=CUM_TRXS/TOT_TRXS;


	PERC_CUM_TRXS_FRD=CUM_TRXS_FRD/TOT_TRXS_FRD;


	PERC_CUM_AMT=CUM_AMT/TOT_AMT;


	PERC_CUM_AMT_FRD=CUM_AMT_FRD/TOT_AMT_FRD;
RUN;




PROC PRINT DATA=TEMP_KS_REPORT_DATA  (OBS=10);
	VAR AMT_WGT TRXS_WGT TOT_TRXS CUM_TRXS CUM_AMT CUM_AMT_FRD CUM_TRXS_FRD WFISIND TOT_AMT_FRD TOT_TRXS_FRD TOT_AMT PERC_CUM_TRXS
		PERC_CUM_AMT SEGMENT;
RUN;




PROC SQL;
CREATE TABLE KS_TABLE AS
SELECT	SEG_BP,
	MAX(CUM_TRXS) AS CUM_TRXS,
	PUT(MAX(PERC_CUM_TRXS), 10.8) AS PERC_CUM_TRXS,


	MAX(CUM_TRXS_FRD) AS CUM_FRAUD_TRXS,
	PUT(MAX(PERC_CUM_TRXS_FRD), 10.8) AS PERC_CUM_TRXS_FRAUD,


	MAX(CUM_AMT) AS CUM_AMOUNT,
	PUT(MAX(PERC_CUM_AMT), 10.8) AS PERC_CUM_AMOUNT,


	MAX(CUM_AMT_FRD) AS CUM_FRAUD_AMOUNT,
	PUT(MAX(PERC_CUM_AMT_FRD), 10.8) AS PERC_CUM_AMT_FRAUD,
	
	AVG(&VAR2) AS NEW_PROBF_MEAN,


	MAX(CUM_TRXS_FRD)/MAX(CUM_TRXS) AS FTG_NUM,
	MAX(CUM_AMT_FRD)/MAX(CUM_AMT) AS FTG_AMOUNT,
	MAX(&VAR2) AS MAX_PROBF,
	MIN(&VAR2) AS MIN_PROBF
FROM	TEMP_KS_REPORT_DATA
GROUP	BY 1
;
QUIT;




PROC PRINT DATA=KS_TABLE;
	TITLE 'KOLMOGOROV-SMIRNOV TABLE BY BASIS POINTS';
RUN;


PROC SQL;
CREATE TABLE REPORT AS
SELECT	APPDENY,
	SUM(TRXS_WGT) AS TOTAL_TRXS,
	SUM(CASE WHEN WFISIND=1 THEN 1 ELSE 0 END) AS TOTAL_FRAUD_TRXS,
	SUM(CASE WHEN WFISIND=1 THEN 1 ELSE 0 END)/SUM(TRXS_WGT) AS FRAUD_RATE,
	SUM(AMT_WGT) AS TOTAL_AMOUNT,
	SUM(CASE WHEN WFISIND=1 THEN AMT_WGT ELSE 0 END) AS TOTAL_FRAUD_AMOUNT,
	SUM(CASE WHEN WFISIND=1 THEN AMT_WGT ELSE 0 END)/SUM(AMT_WGT) AS FRAUD_RATE_AMOUNT,
	SUM(AMT_WGT)/SUM(TRXS_WGT) AS AVERAGE_AMOUNT,
	SUM(CASE WHEN WFISIND=1 THEN AMT_WGT ELSE 0 END)/SUM(CASE WHEN WFISIND=1 THEN 1 ELSE 0 END) AS AVERAGE_FRAUD_AMOUNT
FROM	&VAR1
GROUP	BY 1
;
QUIT;


PROC PRINT DATA=REPORT;
	TITLE 'SUMMARY REPORT';
RUN;


%MEND KS_REPORT;
D)/SUM(CASE WHEN WFISIND=1 THEN 1 ELSE 0 END) AS AVERAGE_FRAUD_AMOUNT
FROM	&VAR1
GROUP	BY 1
;
QUIT;

PROC PRINT DATA=REPORT;
	TITLE 'SUMMARY REPORT';
RUN;

%MEND KS_REPORT;
<!--stackedit_data:
eyJoaXN0b3J5IjpbLTExODYwMzM1NDFdfQ==
-->